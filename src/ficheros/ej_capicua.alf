main
{

  	array int [4] DIVIDENDO;
	array int [4] DIVISOR;
	array int [4] RESULTADO;

  	int NUMCUATROCIFRAS;
	int COCIENTE;
	int RESTO;
  	int COUNT;
	int MUL;
  	int UNO;
	int DOS;
	int TRES;
	int CUATRO;
	int DIVISORAUX;
  	boolean CAPICUA;
  	int & SMALLEST;
  	int I;

 
  	scanf NUMCUATROCIFRAS;
  	CAPICUA = false;

  	DIVIDENDO[ 0 ] = NUMCUATROCIFRAS;
  	DIVISOR[ 0 ] = 1000;
  	DIVISOR[ 1 ] = 100;
  	DIVISOR[ 2 ] = 10;

	for (I = 0 ; 2 )
	{
		  COCIENTE = 0;
		  RESTO = DIVIDENDO[ I ];
		  DIVISORAUX = DIVISOR[ I ];
		  if ((RESTO == DIVISORAUX)) 
			{
		       SMALLEST = * DIVISORAUX;
			}
		  else
			{
		       if ((RESTO <= DIVISORAUX))
					{
		            SMALLEST = * RESTO;
		      	}
				 else
					{
		            SMALLEST = * DIVISORAUX;
					}
		  	}
		  while (( *SMALLEST == DIVISORAUX))
			{
		       COCIENTE = COCIENTE + 1;
		       MUL = COCIENTE * DIVISORAUX;
		       COUNT = 0;
		       while ((MUL + 1) <= (i)) 
					{
		            COUNT = COUNT + 1;
		            MUL = MUL + 1;
					}
		       RESTO = COUNT;
		       if ((RESTO == DIVISORAUX))
				{
		            SMALLEST =  *DIVISORAUX;
				}
		       else
				{
		            if ((RESTO <= DIVISORAUX))
							{
		                 SMALLEST = * RESTO;
							}
		            else
							{
		                 SMALLEST = * DIVISORAUX;
							}
		       	}
		    }
	}
	RESULTADO[ I ] = COCIENTE;
	DIVIDENDO[ I + 1 ] = RESTO;
	RESTO=RESULTADO[ I ];

	UNO = RESULTADO[ 0 ];
	DOS = RESULTADO[ 1 ];
	TRES = RESULTADO[ 2 ];
	CUATRO = RESULTADO[ 3 ];

	if ( (UNO == CUATRO) && (DOS == TRES) )
	{
		CAPICUA = true;
	}
	else{
		CAPICUA = false;
	}


 	printf UNO;
 	printf DOS;
 	printf TRES;
  	printf CUATRO;
  	printf CAPICUA;

}


